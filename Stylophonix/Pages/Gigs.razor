@page "/gigs/{gig}"
@page "/gigs"
@using Stylophonix.Data
@using Stylophonix.Interfaces
@inject IDataService DataService

@if (Gig != null && GetGigInfo() is { } gigInfo)
{
    <PageTitle>Stylophonix | @gigInfo.Title</PageTitle>

    <div id="gig-info">
        <span>@gigInfo.Title</span>
        @foreach (var paragraph in gigInfo.Paragraphs)
        {
            <span>@((MarkupString)paragraph)</span>
        }

    </div>

    <div id="pics">
        @foreach (var fileUrl in gigInfo.ImageUrls)
        {
            <a href="@fileUrl">
                <img src="@fileUrl" alt="@Path.GetFileNameWithoutExtension(fileUrl)"/>
            </a>
        }
    </div>

    <div id="vids">
        @foreach (var fileUrl in gigInfo.VideoUrls)
        {
            <video controls @key="@fileUrl">
                <source src="@fileUrl" type="video/mp4"> <!-- hardcoded mp4, change this if there's other extensions -->
                Your browser does not support the video tag.
            </video>
        }
    </div>
}
else
{
    <PageTitle>Stylophonix | Gigs</PageTitle>

    <GigsList/>
}

@code {

    [Parameter] public string? Gig { get; set; }

    private GigInfo? GetGigInfo()
    {
        if (Gig == null)
        {
            return null;
        }

        return DataService.GetGigInfo().FirstOrDefault(x =>
            x.Id.Equals(Gig, StringComparison.OrdinalIgnoreCase));
    }

}